Questo Sito è stato costruito con le seguenti tecnologie:
Backend
- php (>=5.5.9)
- Laravel Framework (5.1) https://laravel.com/docs/5.1
- Mysql
Frontend
- Html 5 
- Javascript
- jQuery (<1.12.x) https://code.jquery.com
- Bootstrap 3 http://getbootstrap.com/

* Tenere sempre presenti questi link per referenza

Il progetto è stato costrutito con il MVC (model-view-controller https://it.wikipedia.org/wiki/Model-View-Controller) design pattern ed implementa una metodologia CommandBus (https://laravel.com/docs/5.0/bus)

I flusso dello stack è il seguente

- routes.php (app/Http/routes.php)
    |
    - Controller (app/Ibi/Controllers)
        | 
        - CommandBus 
            |
            - Command (app/Ibi/Commands) 
            - Handler (app/Ibi/Handlers)
            - Model (app/Ibi/Models) 
            - Evento (app/Ibi/Events)
                |
                - Controller (app/Ibi/Controllers)
                    |
                    - Views (resources/views)


Struttura Codice, file e cartelle di interesse

- .env - File contenenti variabili di environment in uso per la piattaforma (impostazioni db eccettera)
- .htaccess - File contenenti regole apache generalemte contenenti dinamica mod_rewrite apache ed altre regole di ottimizzazione (etags, gzip)
- app/ - Il core del codice scritto per progetto si trova in questa cartella
    - Http/routes.php - 
    - Ibi/ - Tutto il codice per il progetto IBI.
        - Commands/ - I commandi che scattano da controller front-end e quelli admin
        - Events/ - Eventi che scattano Framework-wide per notificare altre parti dell'applicazione di varie azioni
        - Handlers/ - Handler che vengono eseguite per ogni azioni in Commands/
        - Http/ - Controller e Middleware
        - Listeners/ - Classi che rimangono in ascolto per Eventi di di vari tipi, eseguendo in modo sync altre azioni (invio mail di conferma  
          eccettera)
        - Models/ - Modelli dati
        - Presenters/ - Presenter modelli dati implementati con la seguente libreria (https://github.com/laracasts/Presenter)
        - Providers/ - Service provider che agiscono come middleware per il duplice modello di autenticazione ibi (Medidi/Farmacisti ed Admin)
        - Repositories/ - Repositori Model costruiti per avere dei Modelli contenuti e che contengono tutto le funzionalita sulle quali 
            si appoggiano i CommandBus ed i Controller
        - Routes/ - File delle routes, suddivise per componente
        - Utils/ - Classi aggiuntiper per varie funzionalità come il Mailer e FileUtility (per upload)
- config/ - file di configurazione del progetto
    - traduzioni/ - file di traduzioni strutturali sito IBI (it.php e en.php in formato php array e richiamati nei template)
- database/
    - migrations/ - file per la creazione di tutte le tabelle del database in uso per il progetto
    - dumps/ - vari dump del db
- public/ - La cartella dove punta il webserver (essenzialmente public_html). Qua si trovano tutti i file pubblici (css, js, immagini etc)
    - adm/ tutti gli asset neccessari per l'area admin (css, js, librerie, immagini )
    - allegati/ file allegati nell'area admin
    - file/ allegati dei prodotti
- resources/
    - views/ - tutti i file Blade (https://laravel.com/docs/5.1/blade) per il front-end (area visitatore, non-admin) del sito
        - admin/ - tutti i file Blade (https://laravel.com/docs/5.1/blade) per il back-end (area admin) del sito
- vendor/ - librerie richieste per il funzionamento del framewok, sito e dinamiche. Non deve essere mai neccessario modificare contenuti 
            di questa cartella)


